/* eslint-disable @typescript-eslint/no-floating-promises */
import { Button } from "@/components/ui/button";
import { useEffect, useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import { HTTPMethod, fetcher } from "@/utils/helpers";

const Home: NextPage = () => {
  const [ws, setWs] = useState<WebSocket | null>(null);

  const pingAPI = async () => {
    const path = "ping";
    try {
      const response = await fetcher<{ message: string }>(path, HTTPMethod.GET);
      console.log(response.message);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    console.log("useEffect called");
    if (!ws) {
      console.log("creating websocket....");
      const ws = new WebSocket(
        "ws://localhost:8085/connect?username=sebastian&channelId=12345&uuid=123456"
      );
      console.log(ws);
      setWs(ws);

      ws.onopen = () => {
        console.log("websocket connection opened");
      };
      ws.onclose = () => {
        console.log("websocket connection closed");
      };
      ws.onerror = (err) => {
        console.log("websocket connection error", err);
      };
      ws.onmessage = (msg) => {
        console.log("websocket message received", msg);
      };
    }
    pingAPI();
  }, [ws]);

  const handleSendMessage = () => {
    if (!ws || ws.readyState != ws.OPEN) return;
    console.log("Sending message, the ws is defined and ready");
    const message = {
      type: "chatMsg",
      data: {
        text: "Hello from the client",
      },
    };
    ws.send(JSON.stringify(message));
  };

  const handleDisconnect = () => {
    if (!ws || ws.readyState != ws.OPEN) return;
    console.log("Disconnecting");
    ws.close();
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <Button variant="outline" onClick={handleSendMessage}>
          Send message
        </Button>
        <Button variant="outline" onClick={handleDisconnect}>
          Disconnect
        </Button>
      </main>
    </>
  );
};

export default Home;
