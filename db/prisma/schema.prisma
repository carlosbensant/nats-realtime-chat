generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    chats    ChatMember[]
    messages Message[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Chat {
    id String @id @default(cuid())

    preview  ChatPreview?
    members  ChatMember[]
    messages Message[]
}

model ChatPreview {
    id                  String    @id @default(cuid())
    chatId              String    @unique
    lastMessageText     String?
    lastMessageSentAt   DateTime?
    lastMessageSentById String?

    chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model ChatMember {
    chatId String
    userId String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

    @@unique([chatId, userId])
}

model Message {
    id        String   @id @default(cuid())
    chatId    String
    text      String   @db.Text
    createdAt DateTime @default(now())
    sentById  String

    sentBy User @relation(fields: [sentById], references: [id], onDelete: Cascade)

    chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
}
