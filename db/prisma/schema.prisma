generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    displayName   String?   @map("display_name")
    email         String?   @unique @map("email")
    emailVerified DateTime? @map("email_verified")
    image         String?   @map("image")

    chats    ChatMember[]
    messages Message[]
}

model VerificationToken {
    identifier String   @unique
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Chat {
    id String @id @default(cuid())

    preview  ChatPreview?
    members  ChatMember[]
    messages Message[]
}

model ChatPreview {
    id                  String    @id @default(cuid())
    chatId              String    @unique @map("chat_id")
    lastMessageText     String?   @map("last_message_text")
    lastMessageSentAt   DateTime? @map("last_message_sent_at")
    lastMessageSentById String?   @map("last_message_sent_by_id")

    chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model ChatMember {
    chatId String @map("chat_id")
    userId String @map("user_id")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

    @@unique([chatId, userId])
}

model Message {
    id        String   @id @default(cuid())
    chatId    String   @map("chat_id")
    text      String   @map("text") @db.Text
    createdAt DateTime @default(now()) @map("created_at")
    sentById  String   @map("sent_by_id")

    sentBy User @relation(fields: [sentById], references: [id], onDelete: Cascade)
    chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
}
